{"version":3,"sources":["webpack:///./src/app/components/predstava-osobe/predstava-osobe-item/predstava-osobe-item.component.css","webpack:///./src/app/components/predstava-osobe/predstava-osobe-item/predstava-osobe-item.component.html","webpack:///./src/app/components/predstava-osobe/predstava-osobe-item/predstava-osobe-item.component.ts","webpack:///./src/app/components/predstava-osobe/predstava-osobe-item/predstava-osobe-item.module.ts","webpack:///./src/app/components/predstava-osobe/predstava-osobe-item/predstava-osobe-item.routing.ts","webpack:///./src/app/services/predstava-osobe.service.ts"],"names":[],"mappings":"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","file":"components-predstava-osobe-predstava-osobe-item-predstava-osobe-item-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<div class=\\\"container-body\\\">\\n    <div class=\\\"container-predstava\\\" *ngIf=\\\"predstavaOsobe\\\">\\n        <div class=\\\"predstava\\\">\\n            <div class=\\\"container-left\\\">\\n                <div class=\\\"left\\\">\\n                    <div class=\\\"up-frame\\\">\\n                        <div></div>\\n                    </div>\\n                    <div class=\\\"down-frame\\\">\\n                        <div></div>\\n                    </div>\\n                    <div #panel class=\\\"frame-img\\\">\\n                        <div *ngFor=\\\"let s of slike; let i = index\\\">\\n                            <div *ngIf=\\\"provera(s.namena, predstavaOsobe[0].predstava.naslov)\\\">\\n                                <img  src=\\\"/assets/images/Predstave/{{s.sadrzaj}}.jpg\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"container-right\\\">\\n                <div class=\\\"right\\\">\\n                    <div class=\\\"content\\\">\\n                        <div *ngFor=\\\"let a of predstavaOsobe; let i = index\\\">\\n                            <div class=\\\"reziser\\\" *ngIf=\\\"a.uloga=='Reziser'\\\">{{a.osoba.ime}} {{a.osoba.prezime}}</div>\\n                        </div>\\n                        <div class=\\\"naziv\\\">{{predstavaOsobe[0].predstava.naslov}}</div>\\n                        <div class=\\\"ornament\\\"></div>\\n                        <div class=\\\"sadrzaj\\\">{{predstavaOsobe[0].predstava.opis}}\\n                        </div>\\n                        <div class=\\\"naslov-uloge\\\">ULOGE:</div>\\n                        <div *ngFor=\\\"let a of predstavaOsobe; let i = index\\\">\\n                            <div class=\\\"person\\\" *ngIf=\\\"a.uloga!='Reziser'\\\">\\n                                <img class=\\\"img\\\" src=\\\"/assets/images/Ensemble/Small/img_{{a.osoba.id}}_1.png\\\">\\n                                <div class=\\\"full-name\\\">\\n                                    <h2>{{a.uloga}}</h2>\\n                                    <h1>{{a.osoba.ime}} {{a.osoba.prezime}}</h1>\\n                                </div>\\n                            </div>\\n                            <!-- <div class=\\\"uloga\\\">\\n                                <div class=\\\"naziv-uloga\\\">Дон Рамиро, принц Салерна</div>\\n                                <div class=\\\"osoba-uloga\\\">Саша Младов</div>\\n                            </div> -->\\n                            <!-- <div class=\\\"uloga\\\">\\n                                <div class=\\\"naziv-uloga\\\">Дон Рамиро, принц Салерна</div>\\n                                <div class=\\\"osoba-uloga\\\">Саша Младов</div>\\n                            </div> -->\\n                            <!-- <div class=\\\"uloga\\\">\\n                                <div class=\\\"naziv-uloga\\\">Дон Рамиро, принц Салерна</div>\\n                                <div class=\\\"osoba-uloga\\\">Саша Младов</div>\\n                            </div> -->\\n                        </div>\\n                    </div>\\n                    <div class=\\\"rezervacija\\\">\\n                        <div>\\n                            <div class=text [routerLink]=\\\"['/kontakt']\\\">REZERVIŠI</div>\\n                            <div class=line></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n<!-- <div *ngIf=\\\"predstavaOsobe\\\"> \\n    <div *ngFor=\\\"let a of predstavaOsobe; let i = index\\\">\\n        <div style=\\\"margin-left: 100px;\\\">{{a.uloga}}</div>\\n        <div style=\\\"margin-left: 100px;\\\">{{a.osoba.ime}}</div>\\n        <div style=\\\"margin-left: 100px;\\\">{{a.predstava.naslov}}</div>\\n    </div>\\n</div> -->\"","import { Component, OnInit } from '@angular/core';\nimport { Input } from '@angular/core';\nimport { PredstavaOsoba } from 'src/app/model/predstavaOsoba';\nimport { PredstavaOsobeService } from 'src/app/services/predstava-osobe.service';\n\nimport { Slike } from 'src/app/model/slike';\nimport { SlikeService } from 'src/app/services/slike.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-predstava-osobe-item',\n  templateUrl: './predstava-osobe-item.component.html',\n  styleUrls: ['./predstava-osobe-item.component.css']\n})\nexport class PredstavaOsobeItemComponent implements OnInit {\n\n  public predstavaOsobe: any;\n\n  public osoba: PredstavaOsoba;\n  public id: number;\n  public isDataAvailable: boolean;\n\n  //slike\n  public slike: Slike[];\n  public trazeneSlike: Slike[] = new Array();\n  public slikaUnizu: number;\n  public slika: Slike;\n  public brojSlike: number;\n\n  constructor(private slikeService: SlikeService,  private predstavaOsobeItemService: PredstavaOsobeService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.loadData();\n    this.loadPhotos();\n    this.brojSlike = 0;\n\n  }\n   \n  loadData() {\n    this.route.params\n    .subscribe(\n      (params) => {\n        this.isDataAvailable = false;\n        this.id = +params['id'];\n      }\n    );\n    this.predstavaOsobeItemService.getPredstavaOsobeId(this.id)\n    .subscribe(\n      (data) => {\n        this.predstavaOsobe = data;\n        console.log(data);\n        // tslint:disable-next-line:no-unused-expression\n        this.isDataAvailable;\n      }\n    );\n  }\n  \n\n  loadPhotos() {\n    this.slikeService.getSlika(0, 20000)\n    .subscribe(\n      (data) => { this.slike = data.body;\n                  console.log(data);\n                }\n    );\n  } \n\n  provera(x, y){\n    if (x == y){\n      this.brojSlike = this.brojSlike + 1;\n      if(this.brojSlike < 5){\n        return true\n      }else{\n        return false\n      }\n    }else{\n      return false\n    }\n\n  }\n\n \n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {routing} from './predstava-osobe-item.routing';\r\nimport { PredstavaOsobeItemComponent } from 'src/app/components/predstava-osobe/predstava-osobe-item/predstava-osobe-item.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    routing,\r\n  ],\r\n  declarations: [PredstavaOsobeItemComponent],\r\n  providers: []\r\n})\r\nexport class PredstavaOsobeItemModule { }\r\n","import {Routes, RouterModule} from '@angular/router';\r\nimport {ModuleWithProviders} from '@angular/core';\r\nimport { PredstavaOsobeItemComponent } from 'src/app/components/predstava-osobe/predstava-osobe-item/predstava-osobe-item.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PredstavaOsobeItemComponent},\r\n  // { path: '', redirectTo: 'pstrana', pathMatch: 'full'},\r\n  // { path: 'login', loadChildren: './components/login/login.module#LoginModule'}\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forChild(routes);\r\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { PredstavaOsoba } from 'src/app/model/predstavaOsoba';\nimport { HttpHeaders } from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PredstavaOsobeService {\n\n    public repertoar: Subject<PredstavaOsoba[]> = new Subject();\n    private path = '/api/predstavaOsoba';\n    private path2 = 'osobe'\n    private header = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n    constructor(private http: HttpClient) { }\n\n    getPredstavaOsobe(): Observable<PredstavaOsoba[]> {\n      return this.http.get(this.path) as Observable<PredstavaOsoba[]>;\n    }\n\n    getPredstavaOsobeId(id: number): Observable<PredstavaOsoba> {\n      // console.log('JEDAN USER ID', id);\n      return this.http.get(`${this.path}/${id}/${this.path2}`) as Observable<PredstavaOsoba>;\n    }\n    \n\n    // getPredstavaOsobeIdOsobe(id: number): Observable<PredstavaOsoba> {\n    //   // console.log('JEDAN USER ID', id);\n    //   return this.http.get(`${this.path}/${id}/${this.path2}`) as Observable<PredstavaOsoba>;\n    // }\n  //   deleteCompany(company: Company) {\n  //     return this.http.delete(`${this.path}/${company.id}`);\n  //   } jel ovo servis koji treba da se obrati tome?? moze i ovaj sad skontah\n\n//   saveCompany(company: Company): Observable<Company> {\n  //     if (company.id === undefined) {\n  //       return this.http.post(this.path, company, {headers: this.header}) as Observable<Company>;\n  //     }\n  //     else {\n  //       return this.http.put(`${this.path}/${company.id}`, company, {headers: this.header}) as Observable<Company>;\n  //     }\n  //   }\n\n  //   getCompanyByName(name: string): Observable<Company[]>  {\n  //    return this.http.get(this.path + '?name=' + name) as Observable<Company[]>;\n  //   }\n  // }\n}\n"],"sourceRoot":""}